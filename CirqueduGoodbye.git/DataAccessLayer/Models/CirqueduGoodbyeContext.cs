// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataAccessLayer.Models
{
    public partial class CirqueduGoodbyeContext : DbContext
    {
        public CirqueduGoodbyeContext()
        {
        }

        public CirqueduGoodbyeContext(DbContextOptions<CirqueduGoodbyeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Animal> Animals { get; set; }
        public virtual DbSet<Circus> Circus { get; set; }
        public virtual DbSet<Train> Trains { get; set; }
        public virtual DbSet<TrainWagon> TrainWagons { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Animal>(entity =>
            {
                entity.ToTable("Animal");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.Circus)
                    .WithMany(p => p.Animals)
                    .HasForeignKey(d => d.CircusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Circus_Animal");

                entity.HasOne(d => d.TrainWagon)
                    .WithMany(p => p.Animals)
                    .HasForeignKey(d => d.TrainWagonId)
                    .HasConstraintName("FK_TrainWagon_Animal");
            });

            modelBuilder.Entity<Circus>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Train>(entity =>
            {
                entity.ToTable("Train");

                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<TrainWagon>(entity =>
            {
                entity.ToTable("TrainWagon");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.HasOne(d => d.Train)
                    .WithMany(p => p.TrainWagons)
                    .HasForeignKey(d => d.TrainId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Train_TrainWagon");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}